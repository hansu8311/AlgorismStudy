package Exhaustiv_search;

import java.util.Scanner;

/* 소풍 PICNIC 출처 : https://algospot.com/judge/problem/read/PICNIC
입력 : 
3 
2 1 
0 1 
4 6 
0 1 1 2 2 3 3 0 0 2 1 3 
6 10 
0 1 0 2 1 2 1 3 1 4 2 3 2 4 3 4 3 5 4 5

출력 : 
1
3
4
*/
public class ex02 { 
	static int[] Picnic_anser = null;
	
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Scanner sc = new Scanner(System.in);
		
		int cases_Picnic = sc.nextInt();
		
		Picnic_anser = new int[cases_Picnic];
		
		int Picnic_person = 0;
		int Picnic_relation = 0;
		
		int [] Picnic_relation_x = null;
		int [] Picnic_relation_y = null;
		
		while(cases_Picnic-- > 0) {
			Picnic_person = sc.nextInt();
			Picnic_relation = sc.nextInt();
			
			Picnic_relation_x = new int[Picnic_relation];
			Picnic_relation_y = new int[Picnic_relation];
			
			for(int i = 0; i < Picnic_relation ; i++) {
				Picnic_relation_x[i] = sc.nextInt();
				Picnic_relation_y[i] = sc.nextInt();
			}
			
			System.out.println("cases_Picnic : " + cases_Picnic);
			System.out.println("Picnic_person : " + Picnic_person);
			System.out.println("Picnic_relation : " + Picnic_relation);
			for(int i = 0; i < Picnic_relation ; i++) {
				System.out.print("Picnic_relation_x["+i+"] : " + Picnic_relation_x[i]);
				System.out.print("Picnic_relation_y["+i+"] : " + Picnic_relation_y[i]);
			}
			System.out.println();
			countParings(0,Picnic_relation_x,Picnic_relation_y);
			
		}
	}
	public static boolean countParings(int istart , int irelation_x[], int irelation_y[]){
		System.out.println("함수 들어옴");
		int anser = irelation_x.irelation_x/2;
		
		if(istart < 0 || istart > irelation_x.length) return false;
		
		
		for(int i = istart; i < irelation_x.length ; i++) {
			System.out.println("in : " + irelation_x[i]);
			System.out.println("in : " + irelation_y[i]);
			
			if(irelation_x[i] == irelation_y[i]) {
				countParings(i+1,irelation_x,irelation_y);
			}
		}
		
		return true;
	}
}
